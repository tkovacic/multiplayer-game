var Entity = require("./entity.js");
test.init();

module.exports = {
	init: function() {
		var self = Entity();
		playerCount += 1;
		self.id = id;
		self.username = 'Guest ' + playerCount;
		self.number = "" + Math.floor(10 * Math.random());
		self.pressingRight = false;
		self.pressingLeft = false;
		self.pressingUp = false;
		self.pressingDown = false;
		self.clickFire = false;
		self.mouseAngle = 0;
		self.pressingDown = false;
		self.maxSpd = 5;
		self.img = {
				source:"../client/img/player/temp_sheet.png",
				frameIndex:0,
				tickCount:0,
		};
	}
}

var Player = function(id) {
	var self = Entity();
	playerCount += 1;
	self.id = id;
	self.username = 'Guest ' + playerCount;
	self.number = "" + Math.floor(10 * Math.random());
	self.pressingRight = false;
	self.pressingLeft = false;
	self.pressingUp = false;
	self.pressingDown = false;
	self.clickFire = false;
	self.mouseAngle = 0;
	self.pressingDown = false;
	self.maxSpd = 5;
	self.img = {
			source:"../client/img/player/temp_sheet.png",
			frameIndex:0,
			tickCount:0,
	};
	var super_update = self.update;
	self.update = function() {
		self.updateSpd();
		super_update();
		
		if(self.pressingRight == false && self.pressingLeft == false && self.pressingUp == false && self.pressingDown == false) {
			self.img.tickCount += 1;
			if(self.img.tickCount > 25) {
				self.img.tickCount = 0;
				if(self.img.frameIndex == 0) {
					self.img.frameIndex = 1;
				} else {
					self.img.frameIndex = 0;
				}
			}
		} else {
			tickCount = 0;
		}
		
		if(self.clickFire) {
			self.fireBullet(self.mouseAngle);
		}
	}
	self.fireBullet = function(angle) {
		var b = Bullet(angle);
		b.x = self.x + 15;
		b.y = self.y + 20;
	}
	
	self.updateSpd = function() {
		if(self.pressingRight) {
			self.spdX = self.maxSpd;
			self.img.source = "../client/img/player/temp_sheet_r.png";
		}else if(self.pressingLeft) {
			self.spdX = -self.maxSpd;
			self.img.source = "../client/img/player/temp_sheet.png";
		}else{
			self.spdX = 0;
		}
		if(self.pressingUp) {
			self.spdY = -self.maxSpd;
		}else if(self.pressingDown) {
			self.spdY = self.maxSpd;
		}else{
			self.spdY = 0;
		}
	}
	Player.list[id] = self;
	return self;
}
Player.list = {};
Player.onConnect = function(socket) {
	var player = Player(socket.id);
	
	socket.on('keypress', function(data) {
		if(data.inputID === 'left') {
			player.pressingLeft = data.state;
		}else if(data.inputID === 'right')
			player.pressingRight = data.state;
		else if(data.inputID === 'up')
			player.pressingUp = data.state;
		else if(data.inputID === 'down')
			player.pressingDown = data.state;
		else if(data.inputID === 'fire')
			player.clickFire = data.state;
		else if(data.inputID === 'mouseangle')
			player.mouseAngle = data.state;
	});
	
	socket.on('changeUsername', function(data) {
		player.username = data.inputID;
	});
}
Player.onDisconnect = function(socket) {
	playerCount -= 1;
	delete Player.list[socket.id];
}
Player.update = function() {
	var pack = [];
	for(var i in Player.list) {
		var player = Player.list[i];
		player.update();
		pack.push({
			username:player.username,
			x:player.x,
			y:player.y,
			img:player.img.source,
			facingRight:player.facingRight,
			frame:player.img.frameIndex,
		});
	}
	return pack;
}